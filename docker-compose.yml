version: "3.3"
services:
    nodecollect:
        container_name: nodecollect
        restart: on-failure 
        build:
            context: .
            dockerfile: ./nodecollect/Dockerfile

    nodeexpressapi:
        container_name: nodeexpressapi
        restart: on-failure:5
        build:
            context: .
            dockerfile: ./nodeexpressapi/Dockerfile
        ports: 
            - "6969:6969"    
        depends_on: 
            mysql:
                condition: service_healthy     

    nginx:
        container_name: nginx
        build:
            context: ./nginx
        ports:
            - "80:80"
            - "8080:8080"

    mqtt:
        container_name: mqtt
        build:
            context: ./mqtt
        ports:
            - "1884:1884"
            - "1883:1883"

    mysql:
        container_name: mysql
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD: a   
        ports:
            - "3306:3306"  
        healthcheck:
            test: "/usr/bin/mysql --user=root --password=a --execute \"SHOW DATABASES;\""
            interval: 5s
            timeout: 10s
            retries: 5
            
    mongodb:
      container_name: mongodb
      image: mongo:latest
    #   environment:
    #       MONGO_INITDB_ROOT_USERNAME: root
    #       MONGO_INITDB_ROOT_PASSWORD: rootpassword
    #   volumes:
    #       - ./mongodb:/data/db    
      ports: 
          - "27017:27017"
# remove volumes if error
